glbinding is an MIT licensed, cross-platform C++ binding for the OpenGL API.
glbinding leverages modern C++11 features like enum classes, lambdas, and
variadic templates, instead of relying on macros; all OpenGL symbols are real
functions and variables. It provides type-safe parameters, per feature API
header, lazy function resolution, multi-context and multi-thread support, global
and local function callbacks, meta information about the generated OpenGL
binding and the OpenGL runtime, as well as tools and examples for quick-starting
your projects. Based on the OpenGL API specification (gl.xml) glbinding is
generated using python scripts and templates that can be easily adapted to fit
custom needs. Code that is written using a typical C binding for OpenGL, e.g.,
GLEW, is fully compatible for the use with glbinding and causes no significant
impact on runtime performance (see compare example): just replace all includes
to the former binding, replace the initialization code and use the appropriate
API namespace, e.g., gl.
