$OpenBSD$

add system include folders to CPPPATH
including the c++ path
std=c++11 to silence some warnings about aliases
set stdlib=libc++ to hopefully catch all uses of std::__1
- doesn't work with ports clang ec++
remove the include path c++/v1 to avoid ambiguity with ec++
remove path to clang include folder which messes with ec++
make it choose local include folder over the system ones
remove -lrt which is not present on OpenBSD
disable the linux libraries
add the libc++.a library
add library locations to linkflags

Index: sys/scons/SConscript.game
--- sys/scons/SConscript.game.orig
+++ sys/scons/SConscript.game
@@ -298,23 +298,24 @@ ziploader_list = SConscript( '../../sys/scons/SConscri
 local_env = g_game_env.Clone()
 
 # The game files use the game/precompiled_game.h header, make sure it can be found
-local_env.Prepend(CPPPATH = '#/game')
+local_env.Prepend( CPPPATH = [ '#/game', '/usr/include', '#/include', '/usr/local/include' ] )
 
 local_env.Append( CPPDEFINES = [ 'GAME_DLL' ] )
-local_env.Append( CPPFLAGS = [ '-Wno-deprecated', '-Winvalid-pch' ] )
+local_env.Append( CPPFLAGS = [ '-Wno-deprecated', '-Winvalid-pch', '-std=c++11', '-stdlib=libc++' ] )
 
 # Link the runtime statically, link statically against libpng.a
 # the corresponding package libpng12-dev must be available on the system
-local_env.Append( LINKFLAGS = [ '-lrt' ] ) #, '-lpng'
+local_env.Append( LINKFLAGS = [ '-lpng', '-L/usr/local/lib', '-L/usr/lib' ] ) #, '-lpng'
 
 local_env.Append(LIBS = [
 	# Uncomment this if you're on a x64 system - there is no libpng.a on Ubuntu x64 for instance
 	#File('/usr/lib32/libpng.so'),
-	File('#/linux/libcurl/libcurl.a'),
-	File('#/linux/polarssl/libpolarssl.a'),
-	File('#/linux/boost/lib/libboost_filesystem.a'),
-	File('#/linux/boost/lib/libboost_system.a'),
-	File('#/linux/boost/lib/libboost_thread.a')
+	#File('#/linux/libcurl/libcurl.a'),
+	#File('#/linux/polarssl/libpolarssl.a'),
+	#File('#/linux/boost/lib/libboost_filesystem.a'),
+	#File('#/linux/boost/lib/libboost_system.a'),
+	#File('#/linux/boost/lib/libboost_thread.a'),
+	#File('/usr/lib/libc++.a')
 ])
 
 if NO_GCH == '0':
